{"version":3,"sources":["logoSTC.svg","App.js","reportWebVitals.js","index.js"],"names":["NETWORKS","1","3","STCV1ADDR","STCV2ADDR","MIGRATORADDR","initWeb3","provider","web3","Web3","eth","extend","methods","name","call","outputFormatter","utils","hexToNumber","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","App","props","state","eula","web3Modal","Web3Modal","network","cacheProvider","a","this","connect","subscribeProvider","getAccounts","accounts","address","net","getId","networkId","chainId","evalStatus","BN","setState","connected","old_token","approve","pow","sub","send","from","on","networkID","migrator_contract","doSwap","Contract","ERC20","abi","new_token","STCSwapper","balanceOf","oldBalance","allowance","oldAllowance","getBalance","migratorETHBalance","migratorSTCV2Balance","eligibleForRefund","gte","canSwap","mul","wasApproved","canMigratorRefund","window","location","reload","className","src","logoSTC","alt","Alert","variant","isZero","div","toString","fromWei","Button","size","onClick","bind","doApprove","onConnect","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fa398cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoSTC.c5bc01c1.svg\";","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nimport ERC20 from \"@openzeppelin/contracts/build/contracts/ERC20.json\"\nimport STCSwapper from \"./abi/STCSwapper.json\"\n\nimport './App.css';\nimport logoSTC from './logoSTC.svg';\n\nconst SUPPORTED_NETWORK = 3\nconst NETWORKS = {1: \"mainnet\", 3: \"ropsten\"}\nconst STCV1ADDR = {1: \"0xb8B7791b1A445FB1e202683a0a329504772e0E52\", 3: \"0x2C62E18C667a8794eA7F0A139F1Ab36A4e696286\"}\nconst STCV2ADDR = {1: \"0x15b543e986b8c34074dfc9901136d9355a537e7e\", 3: \"0x86DC1b4B59E5FA81Ec679B8F108F9b131C60D28A\"}\nconst MIGRATORADDR = {1: \"mainnet\", 3: \"0xd9bdF7ace5d3b7CE9c0cf5f9CB2E620ea088dDCF\"}\n\nfunction initWeb3(provider) {\n  const web3 = new Web3(provider);\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: \"chainId\",\n        call: \"eth_chainId\",\n        outputFormatter: web3.utils.hexToNumber\n      }\n    ]\n  });\n\n  return web3;\n}\n\nconst providerOptions = {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: '6a994151aa4a42fb89d772c6f1f00db7'\n        }\n      }\n    };\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { eula: false };\n    this.web3Modal = new Web3Modal({\n      network: NETWORKS[SUPPORTED_NETWORK],\n      cacheProvider: false,\n      providerOptions: providerOptions\n    });\n  }\n\n  async onConnect() {\n    const provider = await this.web3Modal.connect();\n\n    await this.subscribeProvider(provider);\n\n    const web3 = initWeb3(provider);\n\n    const accounts = await web3.eth.getAccounts();\n\n    const address = accounts[0];\n\n    const networkId = await web3.eth.net.getId();\n\n    const chainId = await web3.eth.chainId();\n\n    await this.evalStatus(address, networkId, web3);\n    const BN = web3.utils.BN.BN\n\n    await this.setState({\n      web3,\n      BN: BN,\n      provider,\n      connected: true,\n      address,\n      chainId,\n      networkId\n    });\n  }\n\n  async doApprove() {\n    const web3 = this.state.web3\n    const BN = this.state.BN\n    this.state.old_token.methods.approve(MIGRATORADDR[SUPPORTED_NETWORK], new BN(2).pow(new BN(256)).sub(new BN(1))).send({from: this.state.address})\n    .on('receipt', () => { this.evalStatus(this.state.address, this.state.networkID, web3) })\n    .on('confirmation', () => { this.evalStatus(this.state.address, this.state.networkID, web3) })\n  }\n\n  async doSwap() {\n    const web3 = this.state.web3\n    this.state.migrator_contract.methods.doSwap().send({from: this.state.address})\n    .on('receipt', () => { this.evalStatus(this.state.address, this.state.networkID, web3) })\n    .on('confirmation', () => { this.evalStatus(this.state.address, this.state.networkID, web3) })\n  }\n\n  async evalStatus(address, networkId, web3) {\n    const BN = web3.utils.BN.BN\n    if (networkId === SUPPORTED_NETWORK) {\n        const old_token = new web3.eth.Contract(ERC20.abi, STCV1ADDR[SUPPORTED_NETWORK])\n        const new_token = new web3.eth.Contract(ERC20.abi, STCV2ADDR[SUPPORTED_NETWORK])\n        const migrator_contract = new web3.eth.Contract(STCSwapper.abi, MIGRATORADDR[SUPPORTED_NETWORK])\n        const oldBalance = new BN(await old_token.methods.balanceOf(address).call())\n        const oldAllowance = new BN(await old_token.methods.allowance(address, MIGRATORADDR[SUPPORTED_NETWORK]).call())\n\n        const migratorETHBalance = await web3.eth.getBalance(MIGRATORADDR[SUPPORTED_NETWORK])\n        const migratorSTCV2Balance = new BN(await new_token.methods.balanceOf(MIGRATORADDR[SUPPORTED_NETWORK]).call())\n        const eligibleForRefund = oldBalance.gte(new BN(1000000))\n        const canMigratorRefund = false // TODO\n        const canSwap = migratorSTCV2Balance.gte(oldBalance.mul(new BN(10 ** 10)).mul(new BN(10 ** 6)))\n        const wasApproved = oldAllowance.gte(oldBalance)\n\n        this.setState({\n          migrator_contract,\n          old_token,\n          new_token,\n          oldBalance,\n          oldAllowance,\n          migratorETHBalance,\n          migratorSTCV2Balance,\n          eligibleForRefund,\n          canMigratorRefund,\n          canSwap,\n          wasApproved\n        });\n    }\n  }\n\n  subscribeProvider(provider) {\n    if (!provider.on) {\n      return;\n    }\n    /* TODO: Make is saner - don't reload the app... */\n    provider.on(\"close\", () => {window.location.reload(false);});\n    provider.on(\"accountsChanged\", async () => {\n      window.location.reload(false);\n    });\n    provider.on(\"chainChanged\", async () => {\n       window.location.reload(false);\n    });\n\n    provider.on(\"networkChanged\", async () => {\n       window.location.reload(false);\n    });\n  }\n\n  render() {\n  return (\n<div className=\"App\">\n<div className=\"wrapper\">\n\n<div></div>\n<div></div>\n<div></div>\n<div></div>\n<div>\n<img src={logoSTC} className=\"App-logo\" alt=\"logo\" />\n<div className=\"App-logo-text\">\n<h2>STCV2 Token migration</h2>\n{ !this.state.eula ? (\n<div>\n<div className=\"App-eula\">\n<ol>\n<li> Only access this app if you&aposre a holder of STCV1 </li>\n<li> NEVER send STCV1 directly to the migration contract </li>\n<li> If you disregarded 2) then contact STC support </li>\n<li> You need to have ETH in your wallet in order to swap STCV1 for STCV2 </li>\n<li> The swap is irreversible </li>\n<li> We will swap all of your STCV1 - smaller swaps are disallowed </li>\n<li> We will ask you to perform 2 ETH transactions </li>\n<li> When swapping more than 10k STCV1 you will receive a full/partial gas refund for both transactions </li>\n<li> The migration bonus might be changed at any time - right now the gas refund is 0.01 ETH </li>\n</ol>\n</div>\n<Button variant=\"warning\" size=\"lg\" onClick={() => {this.setState({eula: true})}}>I understand what I&aposm doing</Button>\n</div>\n) : !this.state.connected ?\n(\n<div>\n<Button variant=\"success\" size=\"lg\" onClick={this.onConnect.bind(this)}>Connect wallet</Button>\n</div>\n) : this.state.chainId !== SUPPORTED_NETWORK ?\n(\n    <Alert variant=\"danger\"> Unsupported network id! Please switch to {NETWORKS[SUPPORTED_NETWORK]}  </Alert>\n) : this.state.oldBalance.isZero() ?\n(\n    <Alert variant=\"success\"> You don&apost hold any STCV1 tokens </Alert>\n) :\n(\n<div>\n<div> Double check that you use the correct account </div>\n<div> Connected account: {this.state.address} </div>\n<div> STCV1 balance: {this.state.oldBalance.div(new this.state.BN(10 ** 2)).toString()} </div>\n<div> Migrators STCV1 allowance: {this.state.oldAllowance.div(new this.state.BN(10 ** 2)).toString()} </div>\n<div> STCV2 available swap supply: {this.state.web3.utils.fromWei(this.state.migratorSTCV2Balance)} </div>\n<div> {this.state.eligibleForRefund?\"Eligible for gas refund - at the end of the migration you will receive a small ETH refund\":\"You're not eligible for a gas refund - you hold less than 10k STCV1\"} </div>\n\n{ !this.state.canSwap\n? (<Alert variant=\"danger\"> Migration contract has insufficient STCV2 - contact STC support.  </Alert>)\n: !this.state.wasApproved\n? (\n<div>\n<Button variant=\"success\" size=\"lg\" onClick={this.doApprove.bind(this)}>Approve swap?</Button>\n<div> In case the approval got confirmed and the app didn&apost acknowledge that then reload the Dapp </div>\n</div>)\n: (\n<Button variant=\"success\" size=\"lg\" onClick={this.doSwap.bind(this)}>Swap STCV1 for STCV2?</Button>\n)\n}\n\n\n</div>\n)\n}\n\n</div>\n</div>\n<div></div>\n<div></div>\n<div></div>\n<div></div>\n\n</div>\n</div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}